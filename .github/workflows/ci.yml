name: Package Application with cx_Freeze

on:
  push:
    branches: [ master, dev ]
    tags: [ v* ]
  pull_request:
    branches: [ master, dev ]
#  workflow_dispatch:
#    inputs:
#      version-win:
#        description: "Version(semver)"
#        required: true
#        default: "X.X"

jobs:
  build-windows:
    if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request' && ${{ !contains(github.event.head_commit.message, '(deps') }}
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [ 'x64', 'x86' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: ${{ matrix.architecture }}
      - run: pip install .
      - run: python setup.py build -b dist
      - run: tar.exe -acf dist.zip dist
      - uses: actions/upload-artifact@v3
        with:
          name: TranscribeArabic-${{ runner.os }}-${{ matrix.architecture }}.zip
          path: dist.zip
  build-windows-msi:
    if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request' && ${{ !contains(github.event.head_commit.message, '(deps') }}
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [ 'x64', 'x86' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: ${{ matrix.architecture }}
      - run: pip install .
      - run: python setup.py build bdist_msi
      - uses: actions/upload-artifact@v3
        with:
          name: TranscribeArabic-${{ runner.os }}-${{ matrix.architecture }}.msi
          path: '*.msi'
  build-linux:
    if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request' && ${{ !contains(github.event.head_commit.message, '(deps') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      - run: pip install .
      - run: python setup.py build -b linux
      - run: tar -czvf TranscribeArabic.tar.gz linux
      - uses: actions/upload-artifact@v3
        with:
          name: TranscribeArabic
          path: TranscribeArabic.tar.gz
          retention-days: 7
  build-macos:
    if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request' && ${{ !contains(github.event.head_commit.message, '(deps') }}
    runs-on: macos-latest
    strategy:
      matrix:
        build: [ 'bdist_mac', 'bdist_dmg' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      - run: pip install .
      - name: Run cx_Freeze
        run: python setup.py ${{ matrix.build }}
      - uses: actions/upload-artifact@v3
        with:
          name: TranscribeArabic
          path: TranscribeArabic*.dmg
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v3
        with:
          name: TranscribeArabic
          path: TranscribeArabic*.app
          if-no-files-found: ignore
